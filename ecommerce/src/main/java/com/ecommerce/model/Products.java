package com.ecommerce.model;
// Generated Jul 10, 2018 8:17:37 PM by Hibernate Tools 3.5.0.Final

import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * Products generated by hbm2java
 */
@Entity
@Table(name = "products", catalog = "ecommerce")
public class Products implements java.io.Serializable {

	private Integer productId;
	private Productcategories productcategories;
	private String productSku;
	private String productName;
	private float productPrice;
	private float productWeight;
	private String productCartDesc;
	private String productShortDesc;
	private String productLongDesc;
	private String productThumb;
	private String productImage;
	private Date productUpdateDate;
	private Float productStock;
	private Boolean productLive;
	private Boolean productUnlimited;
	private String productLocation;
	private List<Productoptions> productoptionses = new ArrayList<Productoptions>();
	private List<Orderdetails> orderdetailses = new ArrayList<Orderdetails>();
	private List<Cartitems> cartitemses = new ArrayList<Cartitems>();

	public Products() {
	}

	public Products(String productSku, String productName, float productPrice, float productWeight,
			String productCartDesc, String productShortDesc, String productLongDesc, String productThumb,
			String productImage, Date productUpdateDate) {
		this.productSku = productSku;
		this.productName = productName;
		this.productPrice = productPrice;
		this.productWeight = productWeight;
		this.productCartDesc = productCartDesc;
		this.productShortDesc = productShortDesc;
		this.productLongDesc = productLongDesc;
		this.productThumb = productThumb;
		this.productImage = productImage;
		this.productUpdateDate = productUpdateDate;
	}

	public Products(Productcategories productcategories, String productSku, String productName, float productPrice,
			float productWeight, String productCartDesc, String productShortDesc, String productLongDesc,
			String productThumb, String productImage, Date productUpdateDate, Float productStock, Boolean productLive,
			Boolean productUnlimited, String productLocation, List<Productoptions> productoptionses,
			List<Orderdetails> orderdetailses, List<Cartitems> cartitemses) {
		this.productcategories = productcategories;
		this.productSku = productSku;
		this.productName = productName;
		this.productPrice = productPrice;
		this.productWeight = productWeight;
		this.productCartDesc = productCartDesc;
		this.productShortDesc = productShortDesc;
		this.productLongDesc = productLongDesc;
		this.productThumb = productThumb;
		this.productImage = productImage;
		this.productUpdateDate = productUpdateDate;
		this.productStock = productStock;
		this.productLive = productLive;
		this.productUnlimited = productUnlimited;
		this.productLocation = productLocation;
		this.productoptionses = productoptionses;
		this.orderdetailses = orderdetailses;
		this.cartitemses = cartitemses;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)

	@Column(name = "ProductID", unique = true, nullable = false)
	public Integer getProductId() {
		return this.productId;
	}

	public void setProductId(Integer productId) {
		this.productId = productId;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "ProductCategoryID")
	public Productcategories getProductcategories() {
		return this.productcategories;
	}

	public void setProductcategories(Productcategories productcategories) {
		this.productcategories = productcategories;
	}

	@Column(name = "ProductSKU", nullable = false, length = 50)
	public String getProductSku() {
		return this.productSku;
	}

	public void setProductSku(String productSku) {
		this.productSku = productSku;
	}

	@Column(name = "ProductName", nullable = false, length = 100)
	public String getProductName() {
		return this.productName;
	}

	public void setProductName(String productName) {
		this.productName = productName;
	}

	@Column(name = "ProductPrice", nullable = false, precision = 12, scale = 0)
	public float getProductPrice() {
		return this.productPrice;
	}

	public void setProductPrice(float productPrice) {
		this.productPrice = productPrice;
	}

	@Column(name = "ProductWeight", nullable = false, precision = 12, scale = 0)
	public float getProductWeight() {
		return this.productWeight;
	}

	public void setProductWeight(float productWeight) {
		this.productWeight = productWeight;
	}

	@Column(name = "ProductCartDesc", nullable = false, length = 250)
	public String getProductCartDesc() {
		return this.productCartDesc;
	}

	public void setProductCartDesc(String productCartDesc) {
		this.productCartDesc = productCartDesc;
	}

	@Column(name = "ProductShortDesc", nullable = false, length = 1000)
	public String getProductShortDesc() {
		return this.productShortDesc;
	}

	public void setProductShortDesc(String productShortDesc) {
		this.productShortDesc = productShortDesc;
	}

	@Column(name = "ProductLongDesc", nullable = false, length = 65535)
	public String getProductLongDesc() {
		return this.productLongDesc;
	}

	public void setProductLongDesc(String productLongDesc) {
		this.productLongDesc = productLongDesc;
	}

	@Column(name = "ProductThumb", nullable = false, length = 100)
	public String getProductThumb() {
		return this.productThumb;
	}

	public void setProductThumb(String productThumb) {
		this.productThumb = productThumb;
	}

	@Column(name = "ProductImage", nullable = false, length = 100)
	public String getProductImage() {
		return this.productImage;
	}

	public void setProductImage(String productImage) {
		this.productImage = productImage;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "ProductUpdateDate", nullable = false, length = 19)
	public Date getProductUpdateDate() {
		return this.productUpdateDate;
	}

	public void setProductUpdateDate(Date productUpdateDate) {
		this.productUpdateDate = productUpdateDate;
	}

	@Column(name = "ProductStock", precision = 12, scale = 0)
	public Float getProductStock() {
		return this.productStock;
	}

	public void setProductStock(Float productStock) {
		this.productStock = productStock;
	}

	@Column(name = "ProductLive")
	public Boolean getProductLive() {
		return this.productLive;
	}

	public void setProductLive(Boolean productLive) {
		this.productLive = productLive;
	}

	@Column(name = "ProductUnlimited")
	public Boolean getProductUnlimited() {
		return this.productUnlimited;
	}

	public void setProductUnlimited(Boolean productUnlimited) {
		this.productUnlimited = productUnlimited;
	}

	@Column(name = "ProductLocation", length = 250)
	public String getProductLocation() {
		return this.productLocation;
	}

	public void setProductLocation(String productLocation) {
		this.productLocation = productLocation;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "products")
	public List<Productoptions> getProductoptionses() {
		return this.productoptionses;
	}

	public void setProductoptionses(List<Productoptions> productoptionses) {
		this.productoptionses = productoptionses;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "products")
	public List<Orderdetails> getOrderdetailses() {
		return this.orderdetailses;
	}

	public void setOrderdetailses(List<Orderdetails> orderdetailses) {
		this.orderdetailses = orderdetailses;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "products")
	public List<Cartitems> getCartitemses() {
		return this.cartitemses;
	}

	public void setCartitemses(List<Cartitems> cartitemses) {
		this.cartitemses = cartitemses;
	}

}
